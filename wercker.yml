# This references the default golang container from
# the Docker Hub: https://registry.hub.docker.com/u/library/golang/
# If you want Google's container you would reference google/golang
# Read more about containers on our dev center
# https://devcenter.wercker.com/overview-and-core-concepts/containers/
box: golang
  # This is the build pipeline. Pipelines are the core of wercker
  # Read more about pipelines on our dev center
  # https://devcenter.wercker.com/development/pipelines/

  # You can also use services such as databases. Read more on our dev center:
  # https://devcenter.wercker.com/administration/services/
  # services:
  # - postgres
# https://devcenter.wercker.com/administration/services/examples/postgresql/

services:
  - name: mysql
    id: mysql:latest
    env:
      MYSQL_DATABASE: gorm
      MYSQL_USER: gorm
      MYSQL_PASSWORD: gorm
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"

# - mongo
# https://devcenter.wercker.com/administration/services/examples/mongodb/
build:
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # https://devcenter.wercker.com/development/steps/
  steps:
    # Sets the go workspace and places you package
    # at the right place in the workspace tree
    - setup-go-workspace

    # Gets the dependencies
    - script:
        name: go get
        code: |
          go get

    # Copy config file
    - script:
        name: cp application.yml
        code: |
          cp ./config/application.yml.example  ./config/application.yml

    # Build the project
    - script:
        name: go build
        code: |
          go build ./...

    # Test the project
    - script:
        name: go test
        code: |
          go test ./...

    - script:
        name: test mysql
        code: |
          GORM_DIALECT=mysql GORM_DSN="gorm:gorm@tcp(mysql:3306)/gorm?charset=utf8&parseTime=True" go test -race ./...

    - script:
        name: codecov
        code: |
          go test -race -coverprofile=coverage.txt -covermode=atomic ./...
          bash <(curl -s https://codecov.io/bash)